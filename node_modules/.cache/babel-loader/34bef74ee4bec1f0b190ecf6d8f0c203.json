{"ast":null,"code":"import _taggedTemplateLiteral from \"/Users/hayen/schoolcode/plantacle/node_modules/@babel/runtime/helpers/esm/taggedTemplateLiteral\";\nvar _jsxFileName = \"/Users/hayen/schoolcode/plantacle/src/pages/Tasks.js\";\n\nfunction _templateObject() {\n  const data = _taggedTemplateLiteral([\"\\n  && {\\n    padding-left: 25px;\\n    padding-right: 25px;\\n    padding-top: 25px;\\n  }\\n\"]);\n\n  _templateObject = function () {\n    return data;\n  };\n\n  return data;\n}\n\nimport React from 'react';\nimport styled from 'styled-components';\nimport { Bootstrap, Grid, Row, Col, Container } from 'react-bootstrap';\nimport TaskList from './../components/molecules/Tasks.js';\nwindow.id = 0;\nconst StyledContainer = styled(Container)(_templateObject());\n\nclass Tasks extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      data: ''\n    }; //this.getTemperature = this.getTemperature.bind(this);\n    //this.getDays = this.getDays.bind(this);\n\n    this.removeTask = this.removeTask.bind(this);\n  }\n\n  removeTask(id) {\n    // Filter all tasks except the one to be removed\n    const remainder = this.state.data.filter(task => {\n      if (task.id !== id) return task;\n    }); //Update state with filter\n\n    this.setState({\n      data: remainder\n    });\n  }\n\n  render() {\n    return React.createElement(StyledContainer, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 44\n      },\n      __self: this\n    }, React.createElement(\"p\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 45\n      },\n      __self: this\n    }, \" Taken \"), React.createElement(TaskList, {\n      tasks: this.state.data,\n      removeTask: this.removeTask,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 47\n      },\n      __self: this\n    }));\n  }\n\n}\n\nexport default Tasks;","map":{"version":3,"sources":["/Users/hayen/schoolcode/plantacle/src/pages/Tasks.js"],"names":["React","styled","Bootstrap","Grid","Row","Col","Container","TaskList","window","id","StyledContainer","Tasks","Component","constructor","props","state","data","removeTask","bind","remainder","filter","task","setState","render"],"mappings":";;;;;;;;;;;;;AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,MAAP,MAAmB,mBAAnB;AACA,SAAQC,SAAR,EAAmBC,IAAnB,EAAyBC,GAAzB,EAA8BC,GAA9B,EAAmCC,SAAnC,QAAmD,iBAAnD;AACA,OAAOC,QAAP,MAAqB,oCAArB;AAEAC,MAAM,CAACC,EAAP,GAAY,CAAZ;AAEA,MAAMC,eAAe,GAAGT,MAAM,CAACK,SAAD,CAAT,mBAArB;;AAQA,MAAMK,KAAN,SAAoBX,KAAK,CAACY,SAA1B,CAAoC;AAClCC,EAAAA,WAAW,CAACC,KAAD,EAAQ;AACjB,UAAMA,KAAN;AACA,SAAKC,KAAL,GAAa;AACXC,MAAAA,IAAI,EAAE;AADK,KAAb,CAFiB,CAMjB;AACA;;AAEA,SAAKC,UAAL,GAAkB,KAAKA,UAAL,CAAgBC,IAAhB,CAAqB,IAArB,CAAlB;AAED;;AAEDD,EAAAA,UAAU,CAACR,EAAD,EAAK;AACb;AAEA,UAAMU,SAAS,GAAG,KAAKJ,KAAL,CAAWC,IAAX,CAAgBI,MAAhB,CAAwBC,IAAD,IAAU;AACjD,UAAGA,IAAI,CAACZ,EAAL,KAAYA,EAAf,EAAmB,OAAOY,IAAP;AACpB,KAFiB,CAAlB,CAHa,CAOb;;AACA,SAAKC,QAAL,CAAc;AAACN,MAAAA,IAAI,EAAEG;AAAP,KAAd;AAED;;AAEDI,EAAAA,MAAM,GAAG;AACP,WACE,oBAAC,eAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,iBADJ,EAGI,oBAAC,QAAD;AAAU,MAAA,KAAK,EAAE,KAAKR,KAAL,CAAWC,IAA5B;AAAkC,MAAA,UAAU,EAAE,KAAKC,UAAnD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAHJ,CADF;AASD;;AApCiC;;AAuCpC,eAAeN,KAAf","sourcesContent":["import React from 'react'\nimport styled from 'styled-components';\nimport {Bootstrap, Grid, Row, Col, Container} from 'react-bootstrap';\nimport TaskList from './../components/molecules/Tasks.js';\n\nwindow.id = 0;\n\nconst StyledContainer = styled(Container)`\n  && {\n    padding-left: 25px;\n    padding-right: 25px;\n    padding-top: 25px;\n  }\n`;\n\nclass Tasks extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      data: ''\n    }\n\n    //this.getTemperature = this.getTemperature.bind(this);\n    //this.getDays = this.getDays.bind(this);\n\n    this.removeTask = this.removeTask.bind(this);\n\n  }\n\n  removeTask(id) {\n    // Filter all tasks except the one to be removed\n\n    const remainder = this.state.data.filter((task) => {\n      if(task.id !== id) return task;\n    });\n\n    //Update state with filter\n    this.setState({data: remainder});\n\n  }\n\n  render() {\n    return (\n      <StyledContainer>\n          <p> Taken </p>\n\n          <TaskList tasks={this.state.data} removeTask={this.removeTask}>\n          </TaskList>\n\n      </StyledContainer>\n    )\n  }\n}\n\nexport default Tasks;\n"]},"metadata":{},"sourceType":"module"}